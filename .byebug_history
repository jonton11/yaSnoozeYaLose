continue
streak_busted
continue
streak_busted
continue
reload!
@challenge.accept!
@challenge
(true_votes * 2) > @team.users.count
true_votes
@team.challenges.find_by_id(@challenge).challenge_actions.each do |user| true_votes = true_votes + 1 if (user.vote == true) end
true_votes
@team.challenges.find_by_id(@challenge).challenge_actions.each do |user| puts user.vote end
@team.challenges.find_by_id(@challenge).challenge_actions.each do |user| puts user end
true_votes
@team.challenges.find_by_id(@challenge).challenge_actions.each do |user| true_votes = true_votes + 1 if !user.vote end
@team.challenges.find_by_id(@challenge).challenge_actions.each do |user|
true_votes
true_votes = 0
true_votes
@team.challenges.find_by_id(@challenge).challenge_actions
@team.challenges.find_by_id(@challenge).challenge_actions.users
@team.challenges.find_by_id(@challenge).challenge_actions.count
@team.challenges.find_by_id(@challenge).challenge_actions
@team.challenges.find_by_id(@challenge)
@team = @challenge.team
@challenge.team
@challenge
@team
continue
ChallengeAction.find_by_challenge_id(9)
ChallengeAction.all
ChallengeAction
ChallengeActions
Challenge.find(9).challenge_actions
Challenge.find(9)
Challenge.all
current_user.challenge_actions
current_user.challenge_actions.find(params[:id])
current_user.challenge_actions.find_by_challenge_id(params[:id])
current_user.challenge_actions.find_by_challenge_id
params[:id]
params
current_user.challenge_actions
current_user
continue
@team.challenges
@request
@team.challenges.each do |challenge| @request << challenge if challenge.request? end
@team.challenges.each do |challenge| @request << challenge if challenge.request?
@team.challenges.each do |challenge|
@request = []
@team.challenges
@team = Team.find(3)
@team
continue
params.require(:challenge_action).permit({streak_count: (@streak + 1)})
continue
@challenge_action
@challenge.challenge_actions
@challenge_action
@challenge
params.require(:challenge_action).permit(streak_count: (streak + 1))
params.require(:challenge_action)
continue
params.require(:team)
params.require(:challenge)
params.require(:challenge_action).permit(streak: @streak_count + 1)
params.require(:challenge_action).permit(:streak)
@update_streak.update
@update_streak = @challenge.challenge_actions.find_by_user_id(@user).streak_count
@challenge_action
params.require(:challenge_actions).permit(:streak_count)
params.require(:challengeactions).permit(:streak_count)
params.require(:challenge_actions).permit(:streak_count)
params.require(:challengeaction).permit(:streak_count)
params.require(:challenge_action).permit(:streak_count)
params.require(:challenge_action).permit()
params.require(:challengeaction).permit()
params.require(:challengeaction)
params.require(:challenge-action)
params.require(:challenge-Action)
params.require(:challengeAction)
ChallengeAction.attributes_for
ChallengeAction.params
ChallengeAction.all
challenge_action
params.require(:challenge_actions).permit(:streak_count)
params.require(:challenge_action).permit(:streak_count)
params.require(:challengeaction).permit(:streak_count)
params.require(:challenge_action).permit(:streak_count)
params.require(:challenge_action)
params.require(:challengeAction)
params.require(:challengeActions
params.require(:challengeActions)
params.require(:challengeaction)
params.require(:challenge_actions)
params.require(:challenge_action)
params.require
@update_streak = @challenge.challenge_actions.find_by_user_id(@user).streak_count
@challenge.challenge_actions.find_by_user_id(@user).streak_count
@update_streak = @challenge_action.streak_count
@update_streak
@challenge.challenge_actions.find_by_user_id(@user)
@challenge.challenge_actions
@challenge
continue
@challenge_action.streak_count
@challenge.challenge_actions.find_by_user_id(@user)
@challenge
@challenge_action
continue
current_user.challenge_actions.find_by_challenge_id(12).streak_count
current_user.challenge_actions.find_by_challenge_id(12)
current_user.challenge_actions
current_user
continue
current_user.challenge_actions.find(9).streak_count
current_user.challenge_actions.find(9)
current_user.challenge_actions
current_user
continue
current_user.challenge_actions
current_user.challenge_actions.find(5)
current_user.challenge_actions
current_user
